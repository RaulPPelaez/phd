% Encoding: windows-1252

@Comment{jabref-meta: databaseType:bibtex;}
@article{cuda,
author = {Nickolls, John and Buck, Ian and Garland, Michael and Skadron, Kevin},
title = {Scalable Parallel Programming with CUDA: Is CUDA the Parallel Programming Model That Application Developers Have Been Waiting For?},
year = {2008},
issue_date = {March/April 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {2},
issn = {1542-7730},
url = {https://doi.org/10.1145/1365490.1365500},
doi = {10.1145/1365490.1365500},
abstract = {The advent of multicore CPUs and manycore GPUs means that mainstream processor chips are now parallel systems. Furthermore, their parallelism continues to scale with Moore’s law. The challenge is to develop mainstream application software that transparently scales its parallelism to leverage the increasing number of processor cores, much as 3D graphics applications transparently scale their parallelism to manycore GPUs with widely varying numbers of cores.},
journal = {Queue},
month = mar,
pages = {40-53},
numpages = {14}
}


@book{opengl,
  title={OpenGL programming guide: the official guide to learning OpenGL, version 1.2},
  author={Woo, Mason and Neider, Jackie and Davis, Tom and Shreiner, Dave},
  year={1999},
  publisher={Addison-Wesley Longman Publishing Co., Inc.}
} 

@INPROCEEDINGS{gpgpu2002,
author={C. J. {Thompson} and  {Sahngyun Hahn} and M. {Oskin}},
booktitle={35th Annual IEEE/ACM International Symposium on Microarchitecture, 2002. (MICRO-35). Proceedings.},
title={Using modern graphics architectures for general-purpose computing: a framework and analysis},
year={2002},
volume={},
number={},
pages={306-317},
doi={10.1109/MICRO.2002.1176259}}

@article{ps3md2009,
author = {Luttmann, Edgar and Ensign, Daniel L. and Vaidyanathan, Vishal and Houston, Mike and Rimon, Noam and Øland, Jeppe and Jayachandran, Guha and Friedrichs, Mark and Pande, Vijay S.},
title = {Accelerating molecular dynamic simulation on the cell processor and Playstation 3},
journal = {Journal of Computational Chemistry},
volume = {30},
number = {2},
pages = {268-274},
keywords = {biophysics, simulation software, molecular dynamics, parallel computation, distributed computing, cell processor},
doi = {https://doi.org/10.1002/jcc.21054},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.21054},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/jcc.21054},
abstract = {Abstract Implementation of molecular dynamics (MD) calculations on novel architectures will vastly increase its power to calculate the physical properties of complex systems. Herein, we detail algorithmic advances developed to accelerate MD simulations on the Cell processor, a commodity processor found in PlayStation 3 (PS3). In particular, we discuss issues regarding memory access versus computation and the types of calculations which are best suited for streaming processors such as the Cell, focusing on implicit solvation models. We conclude with a comparison of improved performance on the PS3's Cell processor over more traditional processors. © 2008 Wiley Periodicals, Inc. J Comput Chem, 2009},
year = {2009}
}

@inproceedings{gpuml2005,
author = {Luo, Zhongwen and Liu, Hongzhi and Yang, Zhengping and Wu, Xincai},
year = {2005},
month = {01},
pages = {557-562},
title = {Self-Organizing Maps computing on Graphic Process Unit.}
}

@INPROCEEDINGS{gpuml1998,
    author = {Christian-A. Bohn},
    title = {Kohonen Feature Mapping through Graphics Hardware},
    booktitle = {In Proceedings of Int. Conf. on Compu. Intelligence and Neurosciences},
    year = {1998},
    pages = {64--67}
}

@article{gpuimage2006,
author = {Gonzalez‐Mora,Jose  and Guil,Nicolas  and Zapata,Emilio L. },
title = {Using Graphic Processing Units for Tracking Algorithms},
journal = {AIP Conference Proceedings},
volume = {860},
number = {1},
pages = {310-317},
year = {2006},
doi = {10.1063/1.2361233},

URL = { 
        https://aip.scitation.org/doi/abs/10.1063/1.2361233
    
},
eprint = { 
        https://aip.scitation.org/doi/pdf/10.1063/1.2361233
    
}

}

@inproceedings{gpuimage2003,
author = {Colantoni, Philippe and Boukala, Nabil and Da-Rugna, Jérôme},
year = {2003},
month = {01},
pages = {383-390},
title = {Fast and Accurate Color Images Processing Using 3D Graphics Cards.}
}

@inproceedings{gpulinalg2001,
author = {Larsen, E. Scott and McAllister, David},
title = {Fast Matrix Multiplies Using Graphics Hardware},
year = {2001},
isbn = {158113293X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582034.582089},
doi = {10.1145/582034.582089},
abstract = {We present a technique for large matrix-matrix multiplies using low cost graphics hardware. The result is computed by literally visualizing the computations of a simple parallel processing algorithm. Current graphics hardware technology has limited precision and thus limits immediate applicability of our algorithm. We include results demonstrating proof of concept, correctness, speedup, and a simple application. This is therefore forward looking research: a technique ready for technology on the horizon.},
booktitle = {Proceedings of the 2001 ACM/IEEE Conference on Supercomputing},
pages = {55},
numpages = {1},
keywords = {graphics hardware, matrix multiplication},
location = {Denver, Colorado},
series = {SC '01}
}

  

@article{gpulinalg2003a,
author = {Bolz, Jeff and Farmer, Ian and Grinspun, Eitan and Schr\"{o}der, Peter},
title = {Sparse Matrix Solvers on the GPU: Conjugate Gradients and Multigrid},
year = {2003},
issue_date = {July 2003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {3},
issn = {0730-0301},
url = {https://doi.org/10.1145/882262.882364},
doi = {10.1145/882262.882364},
abstract = {Many computer graphics applications require high-intensity numerical simulation. We show that such computations can be performed efficiently on the GPU, which we regard as a full function streaming processor with high floating-point performance. We implemented two basic, broadly useful, computational kernels: a sparse matrix conjugate gradient solver and a regular-grid multigrid solver. Real time applications ranging from mesh smoothing and parameterization to fluid solvers and solid mechanics can greatly benefit from these, evidence our example applications of geometric flow and fluid simulation running on NVIDIA's GeForce FX.},
journal = {ACM Trans. Graph.},
month = jul,
pages = {917-924},
numpages = {8},
keywords = {Navier-Stokes, multigrid, fluid simulation, conjugate gradient, mesh smoothing, numerical simulation, GPU computing}
}

  



@article{gpulinalg2003b,
author = {Bolz, Jeff and Farmer, Ian and Grinspun, Eitan and Schr\"{o}der, Peter},
title = {Sparse Matrix Solvers on the GPU: Conjugate Gradients and Multigrid},
year = {2003},
issue_date = {July 2003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {3},
issn = {0730-0301},
url = {https://doi.org/10.1145/882262.882364},
doi = {10.1145/882262.882364},
abstract = {Many computer graphics applications require high-intensity numerical simulation. We show that such computations can be performed efficiently on the GPU, which we regard as a full function streaming processor with high floating-point performance. We implemented two basic, broadly useful, computational kernels: a sparse matrix conjugate gradient solver and a regular-grid multigrid solver. Real time applications ranging from mesh smoothing and parameterization to fluid solvers and solid mechanics can greatly benefit from these, evidence our example applications of geometric flow and fluid simulation running on NVIDIA's GeForce FX.},
journal = {ACM Trans. Graph.},
month = jul,
pages = {917-924},
numpages = {8},
keywords = {multigrid, numerical simulation, conjugate gradient, fluid simulation, mesh smoothing, GPU computing, Navier-Stokes}
}

  

@INPROCEEDINGS{gpulbm2004,

  author={ {Zhe Fan} and  {Feng Qiu} and A. {Kaufman} and S. {Yoakum-Stover}},

  booktitle={SC '04: Proceedings of the 2004 ACM/IEEE Conference on Supercomputing}, 

  title={GPU Cluster for High Performance Computing}, 

  year={2004},

  volume={},

  number={},

  pages={47-47},

  doi={10.1109/SC.2004.26}
 }

@article {virusfullatom2018,
article_type = {journal},
title = {All-atom molecular dynamics of the HBV capsid reveals insights into biological function and cryo-EM resolution limits},
author = {Hadden, Jodi A and Perilla, Juan R and Schlicksup, Christopher John and Venkatakrishnan, Balasubramanian and Zlotnick, Adam and Schulten, Klaus},
editor = {Brunger, Axel T},
volume = 7,
year = 2018,
month = {apr},
pub_date = {2018-04-27},
pages = {e32478},
citation = {eLife 2018;7:e32478},
doi = {10.7554/eLife.32478},
url = {https://doi.org/10.7554/eLife.32478},
abstract = {The hepatitis B virus capsid represents a promising therapeutic target. Experiments suggest the capsid must be flexible to function; however, capsid structure and dynamics have not been thoroughly characterized in the absence of icosahedral symmetry constraints. Here, all-atom molecular dynamics simulations are leveraged to investigate the capsid without symmetry bias, enabling study of capsid flexibility and its implications for biological function and cryo-EM resolution limits. Simulation results confirm flexibility and reveal a propensity for asymmetric distortion. The capsid’s influence on ionic species suggests a mechanism for modulating the display of cellular signals and implicates the capsid’s triangular pores as the location of signal exposure. A theoretical image reconstruction performed using simulated conformations indicates how capsid flexibility may limit the resolution of cryo-EM. Overall, the present work provides functional insight beyond what is accessible to experimental methods and raises important considerations regarding asymmetry in structural studies of icosahedral virus capsids.},
keywords = {Molecular Dynamics Simulation, Hepatitis B Virus, Virus Capsid, Single-Particle Image Reconstruction, Cryo-EM resolution},
journal = {eLife},
issn = {2050-084X},
publisher = {eLife Sciences Publications, Ltd},
}